package org.example;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityTransaction;
import org.example.entity.Attendance;
import org.example.entity.Employee;

public class Main {
    public static void main(String[] args) {
        EntityManager entityManager = HibernateUtil.getEntityManagerFactory();
        EntityTransaction transaction = entityManager.getTransaction();

        try {
            transaction.begin();

            Employee employee = new Employee();
            employee.setFirstName("Ivan");
            employee.setLastName("Petrov");
            employee.setEmail("ivan@example.com");
            employee.setPhone("123456789");
            employee.setHireDate(java.time.LocalDate.now());

            entityManager.persist(employee);
            entityManager.flush(); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID

            System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: " + employee.getFirstName() + " " + employee.getLastName());

            // ‚úÖ –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
            Attendance attendance = new Attendance();
            attendance.setEmployee(employee);
            attendance.setDate(java.time.LocalDate.now());
            attendance.setPresent(true);

            entityManager.persist(attendance);

            transaction.commit(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑

            System.out.println("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –¥–ª—è: " + employee.getFirstName() + " " + employee.getLastName());

            // üü¢ –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –≤—ã–≤–æ–¥–∏–º
            System.out.println("–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:");
            entityManager.createQuery("SELECT e FROM Employee e", Employee.class)
                    .getResultList()
                    .forEach(emp -> System.out.println(emp.getFirstName() + " " + emp.getLastName() + " - " + emp.getEmail()));

        } catch (Exception e) {
            e.printStackTrace();
            if (transaction.isActive()) {
                transaction.rollback();
            }
        } finally {
            entityManager.close();
            HibernateUtil.shutdown();
        }
    }
}


//    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É Employee)
//    –£—á–µ—Ç —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ Attendance)
//    –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—É—Å–∫ (–°–æ–∑–¥–∞–Ω–∏–µ LeaveRequest)
//    –†–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã (–°–æ–∑–¥–∞–Ω–∏–µ Payroll –∏ —Ä–∞—Å—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ WorkTime)
//    –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–î–æ–±–∞–≤–ª–µ–Ω–∏–µ PerformanceReview)
//    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Position)
//    –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∏ –∑–∞—Ä–ø–ª–∞—Ç–µ

